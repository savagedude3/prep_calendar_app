prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
for (i in length(prepTasks)) {
if (prepTasks[i] == "NA"){
prepTasks[i] = NA
}
}
print(prepTasks)
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 15
prepTasks <- character(lastDIV + 1)
#has to be DIV + 1 since R starts at 1
prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
i=0
for (i in length(prepTasks)) {
print(i)
if (prepTasks[i] == "NA"){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
i=0
for (i in 1:length(prepTasks)) {
print(i)
if (prepTasks[i] == "NA"){
prepTasks[i] = NA
}
}
for (i in 1:length(prepTasks)) {
print(i)
if (prepTasks[i] == "NA"){
prepTasks[i] = NA
}
}
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 15
prepTasks <- character(lastDIV + 1)
#has to be DIV + 1 since R starts at 1
prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
for (i in 1:length(prepTasks)) {
print(i)
if (prepTasks[i] == "NA"){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
for (i in 1:length(prepTasks)) {
print(prepTasks[i])
if (prepTasks[i] == "NA"){
print(prepTasks[i])
prepTasks[i] = NA
}
}
for (i in 1:length(prepTasks)) {
print(prepTasks[i])
if (prepTasks[i] == "NA"){
print("in NA")
prepTasks[i] = NA
}
}
for (i in 1:length(prepTasks)) {
print(prepTasks[i])
if (prepTasks[i] == ""){
print("in NA")
prepTasks[i] = NA
}
}
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 15
prepTasks <- character(lastDIV + 1)
#has to be DIV + 1 since R starts at 1
prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
for (i in 1:length(prepTasks)) {
print(prepTasks[i])
if (prepTasks[i] == ""){
print("in NA")
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 15
prepTasks <- character(lastDIV + 1)
#has to be DIV + 1 since R starts at 1
prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == ""){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
colnames(cleanDF) <- c("Subject", "Start date")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#practice with dates
#dates from R4ds https://r4ds.had.co.nz/dates-and-times.html?q=date#prerequisites-10
#Google Calendar import format https://support.google.com/calendar/answer/37118?co=GENIE.Platform%3DDesktop&hl=en#zippy=%2Ccreate-or-edit-a-csv-file
library(lubridate)
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 15
prepTasks <- character(lastDIV + 1)
#has to be DIV + 1 since R starts at 1
prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == ""){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
colnames(cleanDF) <- c("Subject", "Start date")
dateVector[1]
as.numeric(dateVector[1])
dateVector[1]
ymd(dateVector[1])
as.character(dateVector[1])
#practice with dates
#dates from R4ds https://r4ds.had.co.nz/dates-and-times.html?q=date#prerequisites-10
#Google Calendar import format https://support.google.com/calendar/answer/37118?co=GENIE.Platform%3DDesktop&hl=en#zippy=%2Ccreate-or-edit-a-csv-file
library(lubridate)
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 15
prepTasks <- character(lastDIV + 1)
#has to be DIV + 1 since R starts at 1
prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == ""){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, as.character(dateVector))
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
colnames(cleanDF) <- c("Subject", "Start date")
View(cleanDF)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
#practice with dates
#dates from R4ds https://r4ds.had.co.nz/dates-and-times.html?q=date#prerequisites-10
#Google Calendar import format https://support.google.com/calendar/answer/37118?co=GENIE.Platform%3DDesktop&hl=en#zippy=%2Ccreate-or-edit-a-csv-file
library(lubridate)
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 15
prepTasks <- character(lastDIV + 1)
#has to be DIV + 1 since R starts at 1
prepTasks[1] = "Prep Day"
prepTasks[2] = "feed astros w/ AraC"
prepTasks[4] = "feed astros"
prepTasks[6] = "astro shakeoff"
prepTasks[7] = "feed astros"
prepTasks[8] = "astro passage"
prepTasks[9] = "transduce astros"
prepTasks[11] = "feed astros w/ Puro"
prepTasks[13] = "feed astros w/ Puro"
prepTasks[16] = "Collect RNA"
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == ""){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
colnames(cleanDF) <- c("Subject", "Start date")
runApp()
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('~/R_stuff/data_tables_example.R')
runApp('~/R_stuff/dates_example.R')
runApp('~/R_stuff/dates_example.R')
runApp('~/R_stuff/dates_example.R')
runApp('~/R_stuff/dates_example.R')
runApp('~/R_stuff/dates_example.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
runApp('app_v2.R')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='savagej3', token='3C0DF5DAE4F74BB7D1E15721E0166F83', secret='nbGBghIgOxUMjSEr9bVydVHF5idmlgJkf0/bwAf/')
getwd()
library(rsconnect)
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/app.R')
library(rsconnect)
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/')
library(rsconnect)
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
library(rsconnect)
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
library(rsconnect)
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
shiny::runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
library(rsconnect)
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
runApp('Prep_Calendar_App')
customDF <- read.csv("C:\Users\savage\Desktop\practice_custom.csv")
customDF <- read.csv("C:/Users\savage\Desktop\practice_custom.csv")
customDF <- read.csv("C:\\Users\\savage\\Desktop\\practice_custom.csv")
customDF <- read.csv("C:\\Users\\savag\\Desktop\\practice_custom.csv")
View(customDF)
customDF <- read.csv("C:\\Users\\savag\\Desktop\\practice_custom.csv")
View(customDF)
customDF <- read.csv("C:\\Users\\savag\\Desktop\\practice_custom.csv", header = TRUE)
View(customDF)
customDF <- read.csv("C:\\Users\\savag\\Desktop\\practice_custom.csv", header = TRUE)
customVector <- customDF$Subject
customVector <- customDF$ï..Subject
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
customDF <- "DIV 0: prep day,DIV 2: feed neurons w/ AraC,DIV3:feed neurons"
library(lubridate)
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 100
prepTasks <- character(101)
customDF <- "DIV 0: prep day,DIV 2: feed neurons w/ AraC,DIV3:feed neurons"
#placeholder for app if statement
if (TRUE){
customString <- input$customSchedule
splitString <- strsplit(customString, ",")
for (i in 1:length(splitString)) {
prepTasks[i] = splitString[i]
}
}
if (TRUE){
customString <- customDF
splitString <- strsplit(customString, ",")
for (i in 1:length(splitString)) {
prepTasks[i] = splitString[i]
}
}
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == ""){
prepTasks[i] = NA
}
}
View(prepTasks)
splitString <- str_split(customString, ",")
splitString <- strsplit(customString, ",")
splitString <- strsplit(customString, ",")
splitString <- strsplit(customString, ",")
splitString[1]
library(lubridate)
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 100
prepTasks <- character(101)
customDF <- "DIV 0: prep day,DIV 2: feed neurons w/ AraC,DIV3:feed neurons"
#placeholder for app if statement
if (TRUE){
customString <- customDF
splitString <- strsplit(customString, ",")
for (i in 1:length(splitString)) {
prepTasks[i] = splitString[[i]]
}
}
splitString[[1]]
View(ui)
prepTasks <- character(101)
customDF <- "DIV 0: prep day,DIV 2: feed neurons w/ AraC,DIV3:feed neurons"
if (TRUE){
customString <- customDF
splitString <- strsplit(customString, ",")
for (i in 1:length(splitString)) {
prepTasks[i] = splitString[[i]]
}
}
splitString <- unlist(strsplit(customString, ","))
splitString[1]
library(lubridate)
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 100
prepTasks <- character(101)
customDF <- "DIV 0: prep day,DIV 2: feed neurons w/ AraC,DIV3:feed neurons"
#placeholder for app if statement
if (TRUE){
customString <- customDF
splitString <- unlist(strsplit(customString, ","))
for (i in 1:length(splitString)) {
prepTasks[i] = splitString[[i]]
}
}
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == ""){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
colnames(cleanDF) <- c("Subject", "Start date")
View(cleanDF)
runApp('Prep_Calendar_App')
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
shiny::runApp('Prep_Calendar_App')
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
runApp('Prep_Calendar_App')
customDF <- "DIV 0: prep day,,DIV 2: feed neurons w/ AraC,DIV3:feed neurons"
customString <- customDF
splitString <- unlist(strsplit(customString, ","))
splitString
splitString[2]
for (i in 1:length(splitString)) {
prepTasks[i] = splitString[[i]]
}
prepTasks[1]
prepTasks[2]
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == ""){
prepTasks[i] = NA
}
}
prepTasks[2] == ""
prepTasks[1] == "DIV 0: prep day"
prepTasks[2] == ""
is.na(prepTasks[2])
library(lubridate)
prepDay <- ymd(20210630)
print(prepDay + 1)
lastDIV <- 100
prepTasks <- character(101)
customDF <- "DIV 0: prep day,,DIV 2: feed neurons w/ AraC,DIV3:feed neurons"
#placeholder for app if statement
if (TRUE){
customString <- customDF
splitString <- unlist(strsplit(customString, ","))
for (i in 1:length(splitString)) {
prepTasks[i] = splitString[[i]]
}
}
for (i in 1:length(prepTasks)) {
if (prepTasks[i] == "" || is.na(prepTasks[i])){
prepTasks[i] = NA
}
}
dateVector <- seq(prepDay, prepDay + lastDIV, by="days")
calDataFrame <- data.frame(prepTasks)
calDataFrame <- cbind(calDataFrame, dateVector)
cleanDF <- calDataFrame[complete.cases(calDataFrame), ]
colnames(cleanDF) <- c("Subject", "Start date")
View(cleanDF)
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
View(cleanDF)
cleanDF$`Start date`
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
length(cleanDF)
runApp('Prep_Calendar_App')
wday(cleanDF$`Start date`)
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
runApp('Prep_Calendar_App')
rsconnect::deployApp('C:/Users/savag/Documents/R_stuff/Prep_Calander_Shiny_app/Prep_Calendar_App')
